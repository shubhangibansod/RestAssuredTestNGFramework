<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="5" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-06-18T19:18:33 IST" name="Default suite" finished-at="2025-06-18T19:18:41 IST" duration-ms="8066">
    <groups>
    </groups>
    <test started-at="2025-06-18T19:18:33 IST" name="Default test" finished-at="2025-06-18T19:18:41 IST" duration-ms="8066">
      <class name="com.spotify.oauth2.tests.PlayListTest">
        <test-method is-config="true" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:com.spotify.oauth2.tests.PlayListTest@1744a475]" started-at="2025-06-18T19:18:33 IST" name="BeforeMethod" finished-at="2025-06-18T19:18:33 IST" duration-ms="24" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.spotify.oauth2.tests.PlayListTest.ShouldBeAbleToCreatePlayList() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="ShouldBeAbleToCreatePlayList()[pri:0, instance:com.spotify.oauth2.tests.PlayListTest@1744a475]" started-at="2025-06-18T19:18:33 IST" name="ShouldBeAbleToCreatePlayList" description="Should be able to create play list" finished-at="2025-06-18T19:18:40 IST" duration-ms="6266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShouldBeAbleToCreatePlayList -->
        <test-method is-config="true" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:com.spotify.oauth2.tests.PlayListTest@1744a475]" started-at="2025-06-18T19:18:40 IST" name="BeforeMethod" finished-at="2025-06-18T19:18:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.spotify.oauth2.tests.PlayListTest.ShouldBeAbleToGetPlayList() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="ShouldBeAbleToGetPlayList()[pri:0, instance:com.spotify.oauth2.tests.PlayListTest@1744a475]" started-at="2025-06-18T19:18:40 IST" name="ShouldBeAbleToGetPlayList" description="Should be able to get play list" finished-at="2025-06-18T19:18:40 IST" duration-ms="385" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShouldBeAbleToGetPlayList -->
        <test-method is-config="true" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:com.spotify.oauth2.tests.PlayListTest@1744a475]" started-at="2025-06-18T19:18:40 IST" name="BeforeMethod" finished-at="2025-06-18T19:18:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.spotify.oauth2.tests.PlayListTest.ShouldBeAbleToUpdatePlayList() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="ShouldBeAbleToUpdatePlayList()[pri:0, instance:com.spotify.oauth2.tests.PlayListTest@1744a475]" started-at="2025-06-18T19:18:40 IST" name="ShouldBeAbleToUpdatePlayList" description="Should be able to update play list" finished-at="2025-06-18T19:18:40 IST" duration-ms="422" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShouldBeAbleToUpdatePlayList -->
        <test-method is-config="true" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:com.spotify.oauth2.tests.PlayListTest@1744a475]" started-at="2025-06-18T19:18:40 IST" name="BeforeMethod" finished-at="2025-06-18T19:18:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.spotify.oauth2.tests.PlayListTest.ShouldNotBeAbleToCreatePlayListWithExpiredToken() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="ShouldNotBeAbleToCreatePlayListWithExpiredToken()[pri:0, instance:com.spotify.oauth2.tests.PlayListTest@1744a475]" started-at="2025-06-18T19:18:40 IST" name="ShouldNotBeAbleToCreatePlayListWithExpiredToken" description="Should not be able to create playlist with expired token" finished-at="2025-06-18T19:18:41 IST" duration-ms="338" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShouldNotBeAbleToCreatePlayListWithExpiredToken -->
        <test-method is-config="true" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:com.spotify.oauth2.tests.PlayListTest@1744a475]" started-at="2025-06-18T19:18:41 IST" name="BeforeMethod" finished-at="2025-06-18T19:18:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.spotify.oauth2.tests.PlayListTest.ShouldNotBeAbleToCreatePlayListWithoutName() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="ShouldNotBeAbleToCreatePlayListWithoutName()[pri:0, instance:com.spotify.oauth2.tests.PlayListTest@1744a475]" started-at="2025-06-18T19:18:41 IST" name="ShouldNotBeAbleToCreatePlayListWithoutName" description="Should not be able to create playlist without name" finished-at="2025-06-18T19:18:41 IST" duration-ms="328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShouldNotBeAbleToCreatePlayListWithoutName -->
      </class> <!-- com.spotify.oauth2.tests.PlayListTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
